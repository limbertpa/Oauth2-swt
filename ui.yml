# Define settings for Single-Sign-On with OAuth2; this means that we need to relay the OAuth token
# to the subsequent resources that are proxied by the Zuul api gateway.

# The home definition tells us to allow anonymous access (secure: false) to the static resources that
# are accessed through the Zuul proxy.

# Remaining properties are used by the OAuth2 SSO to determine where the authorization server is and
# what client crendentials to use to access that server.
#logging:
  #level:
    #org:
      #springframework:
        #security: DEBUG
logging:
  level:
    org.springframework.security: DEBUG
# setting user
#authserver: 
  #hostname: localhost 
  #port: 9999 
  #contextPath: uaa 
auth-server: http://localhost:9999/uaa
# Define the port where the API gateway server would be running
server:
  port: 8080
  #session-timeout: 10
security:
  basic:
    enabled: false
  oauth2:
    client:
      client-id: demo
      client-secret: demo
      access-token-uri: ${auth-server}/oauth/token
      user-authorization-uri: ${auth-server}/oauth/authorize
      scope: read, write
    resource:
      jwt:
        key-uri: ${auth-server}/oauth/token_key
logging:
  level:
    org.springframework.security: DEBUG
spring:
  jackson:
    date-format: com.fasterxml.jackson.databind.util.ISO8601DateFormat
zuul:
  routes:
    message:
      sensitiveHeaders:
      path: /api/messages/**
      url: http://localhost:7777/api/messages
    authorization:
      sensitiveHeaders:
      path: /auth/**
      url: http://localhost:9999/
      #stripPrefix: false
  addProxyHeaders: true

# Define the Eureka server that handles service registration
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
	  
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds: 60000
ribbon:
  ConnectTimeout: 3000
  ReadTimeout: 60000
